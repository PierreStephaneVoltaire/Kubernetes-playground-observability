loki:
  schemaConfig:
    configs:
      - from: 2024-04-01
        store: tsdb
        object_store: s3
        schema: v13
        index:
          prefix: loki_index_
          period: 24h
  ingester:
    chunk_encoding: snappy
  tracing:
    enabled: true
  querier:
    max_concurrent: 2
  storage_config:
    aws:
      region: ca-central-1 
      bucketnames: playground-loki-logs-bucket 
      s3forcepathstyle: false
  pattern_ingester:
    enabled: true
  limits_config:
    allow_structured_metadata: true
    volume_enabled: true
    retention_period: 672h 
  compactor:
    retention_enabled: true
    delete_request_store: s3
  ruler:
    enable_api: true
    storage:
      type: s3
      s3:
        region: ca-central-1 
        bucketnames: playground-loki-logs-bucket 
        s3forcepathstyle: false
      alertmanager_url: http://prom:9093 
  storage:
    type: s3
    bucketNames:
      chunks: "playground-loki-logs-bucket" 
      ruler: "playground-loki-logs-bucket" 
    s3:
      region: ca-central-1 
     
serviceAccount:
  create: false
  name: loki-service-account

deploymentMode: Distributed

ingester:
  replicas: 2
  zoneAwareReplication:
    enabled: false
  resources:
    requests:
      cpu: 50m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 1Gi

querier:
  replicas: 1
  maxUnavailable: 1
  resources:
    requests:
      cpu: 50m
      memory: 128Mi
    limits:
      cpu: 500m
      memory: 512Mi

queryFrontend:
  replicas: 1
  maxUnavailable: 1
  resources:
    requests:
      cpu: 25m
      memory: 128Mi
    limits:
      cpu: 250m
      memory: 512Mi

queryScheduler:
  replicas: 1
  resources:
    requests:
      cpu: 25m
      memory: 64Mi
    limits:
      cpu: 250m
      memory: 256Mi

distributor:
  replicas: 2
  maxUnavailable: 1
  resources:
    requests:
      cpu: 50m
      memory: 128Mi
    limits:
      cpu: 500m
      memory: 512Mi

compactor:
  replicas: 1
  serviceAccount:
    create: false
    name: loki-service-account
  resources:
    requests:
      cpu: 50m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 1Gi

indexGateway:
  replicas: 1
  maxUnavailable: 1
  resources:
    requests:
      cpu: 50m
      memory: 128Mi
    limits:
      cpu: 500m
      memory: 512Mi

ruler:
  replicas: 1
  maxUnavailable: 1
  resources:
    requests:
      cpu: 50m
      memory: 128Mi
    limits:
      cpu: 500m
      memory: 512Mi


gateway:
  service:
    type: LoadBalancer
  basicAuth:
    enabled: true
    existingSecret: loki-basic-auth

lokiCanary:
  extraArgs:
    - -pass=$(LOKI_PASS)
    - -user=$(LOKI_USER)
  extraEnv:
    - name: LOKI_PASS
      valueFrom:
        secretKeyRef:
          name: canary-basic-auth
          key: password
    - name: LOKI_USER
      valueFrom:
        secretKeyRef:
          name: canary-basic-auth
          key: username

minio:
  enabled: false

backend:
  replicas: 0
read:
  replicas: 0
write:
  replicas: 0

singleBinary:
  replicas: 0
